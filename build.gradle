import org.gradle.internal.jvm.Jvm

plugins {
    id 'java-library'
    id 'c'
    id 'maven-publish'
}

group "com.unum.ukv"
version = file("VERSION").text.trim()

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDir "java/"
            exclude "test/"
        }
    }
    test {
        java {
            srcDir "java/test"
        }
    }
}

dependencies {
    testImplementation('junit:junit:4.13.2')
}

model {
    buildTypes{
        umem
        rocksdb
        leveldb
    }

    components {
        ukv(NativeLibrarySpec) {
            sources {
                c {
                    source {
                        srcDirs "java/com/unum/ukv"
                        include "**/*.c"
                    }
                    exportedHeaders {
                        srcDirs "include", "${Jvm.current().javaHome}/include"
                    }
                }
            }
            binaries.withType(StaticLibraryBinarySpec) {
                buildable = false
            }
            binaries.withType(SharedLibraryBinarySpec) {
                if (targetPlatform.operatingSystem.linux) {
                    cCompiler.args '-I', "${Jvm.current().javaHome}/include/linux"
                    cCompiler.args '-D_FILE_OFFSET_BITS=64'
                }

                if (buildType == buildTypes.umem) {
                    linker.args '-L', "${projectDir}/build/lib", "-l", "umem_bundle", "-l", "c"
                } else if (buildType == buildTypes.rocksdb) {
                    linker.args '-L', "${projectDir}/build/lib", "-l", "rocksdb_bundle", "-l", "c"
                } else if (buildType == buildTypes.leveldb) {
                    linker.args '-L', "${projectDir}/build/lib", "-l", "leveldb_bundle", "-l", "c"
                }
            }
        }
    }
}

test {
    forkEvery 1

    dependsOn jar

    // Rearrange test classpath, add compiled JAR instead of main classes
    classpath = project.sourceSets.test.output + configurations.testRuntimeClasspath + files(jar.archiveFile)
}

jar {
    dependsOn("ukvUmemSharedLibrary")
    dependsOn("ukvRocksdbSharedLibrary")
    dependsOn("ukvLeveldbSharedLibrary")

    into("umem") {
        from("$buildDir/libs/ukv/shared/umem/libukv.so")
    }

    into("rocksdb") {
        from("$buildDir/libs/ukv/shared/rocksdb/libukv.so")
    }

    into("leveldb") {
        from("$buildDir/libs/ukv/shared/leveldb/libukv.so")
    }
}

publishing {
    publications {
        library(MavenPublication) {
            from components.java

            pom {
                name = "UKV"
                description = "Universal Key-Value store interface for both in-memory and persistent transactional collections for Java"
                url = "https://github.com/unum-cloud/ukv"
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
            }
        }
    }
    repositories {
         maven {
             name = "OSSRH"
             url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
             credentials {
                 username = System.getenv("MAVEN_USERNAME")
                 password = System.getenv("MAVEN_PASSWORD")
             }
         }
    }
}