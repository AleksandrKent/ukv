import org.gradle.internal.jvm.Jvm

plugins {
    id 'java-library'
    id 'c'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation('junit:junit:4.13.2')
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

sourceSets {
    main {
        java {
            srcDir "java/"
        }
    }
    test {
        java {
            srcDir "java/"
        }
    }
}

model {
    platforms {
        x64 {
            architecture "x64"
        }
    }
    buildTypes{
        stl
        rocks
        level
    }

    components {
        ukv(NativeLibrarySpec) {
            sources {
                c {
                    source {
                        srcDirs "java/com/unum/ukv"
                        include "**/*.c"
                    }
                    logger.quiet("Here ${Jvm.current().javaHome}")
                    exportedHeaders {
                        srcDirs "include", "${Jvm.current().javaHome}/include"
                    }
                }
            }
            binaries.withType(StaticLibraryBinarySpec) {
                buildable = false
            }
            binaries.withType(SharedLibraryBinarySpec) {
                if (targetPlatform.operatingSystem.linux) {
                    cCompiler.args '-I', "${Jvm.current().javaHome}/include/linux"
                    cCompiler.args '-D_FILE_OFFSET_BITS=64'
                }

                if (buildType == buildTypes.stl) {
                    linker.args '-L', "${projectDir}/build/lib", "-l", "ukv_stl", "-l", "c"
                } else if (buildType == buildTypes.rocks) {
                    linker.args '-L', "${projectDir}/build/lib", "-l", "ukv_rocksdb", "-l", "rocksdb", "-l", "c"
                } else if (buildType == buildTypes.level) {
                    linker.args '-L', "${projectDir}/build/lib", "-l", "ukv_leveldb", "-l", "leveldb", "-l", "c"
                }
            }
        }
    }
}

jar.enabled = false
test.forkEvery 1

task ukv_stl(type: Jar) {
    from (sourceSets.main.output) {
        exclude "com/unum/ukv/DataBaseRocks.class"
        exclude "com/unum/ukv/DataBaseLevel.class"
    }
    baseName "ukvSTL"
    dependsOn("ukvStlSharedLibrary")
    from("$buildDir/libs/ukv/shared/stl/libukv.so")
    from("$buildDir/lib/libukv_stl.a")
}

task ukv_rocks(type: Jar) {
    from (sourceSets.main.output) {
        exclude "com/unum/ukv/DataBaseSTL.class"
        exclude "com/unum/ukv/DataBaseLevel.class"
    }
    baseName "ukvRocks"
    dependsOn("ukvRocksSharedLibrary")
    from("$buildDir/libs/ukv/shared/rocks/libukv.so")
    from("$buildDir/lib/libukv_rocksdb.a")
    from("$buildDir/lib/librocksdb.a")
}

task ukv_level(type: Jar) {
    from (sourceSets.main.output) {
        exclude "com/unum/ukv/DataBaseRocks.class"
        exclude "com/unum/ukv/DataBaseSTL.class"
    }
    baseName "ukvLevel"
    dependsOn("ukvLevelSharedLibrary")
    from("$buildDir/libs/ukv/shared/level/libukv.so")
    from("$buildDir/lib/libukv_leveldb.a")
    from("$buildDir/lib/libleveldb.a")
}

artifacts {
    archives ukv_stl
    archives ukv_rocks
    archives ukv_level
}